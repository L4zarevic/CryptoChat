/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cryptochat;

import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import sun.misc.BASE64Decoder;
import sun.misc.BASE64Encoder;

/**
 *
 * @author NemanjaLazarević
 */
public class CryptoChat extends javax.swing.JFrame {

    Connection con;
    Statement stmt;
    ResultSet rs;

    String url;
    String username;
    String password;

    String sifrovaniText;

    DefaultTableModel tmodel;

    public CryptoChat() throws SQLException {

        initComponents();

        Connect();

        Select s = new Select(this.sifrovano_T);
        new Thread(s).start();

        JTable table = this.sifrovano_T;
        table.getTableHeader().setReorderingAllowed(false);
    }

    class Select implements Runnable {

        JTable jtb;

        public Select(JTable jtb) {
            this.jtb = jtb;
        }

        @Override
        public void run() {
            while (true) {

                try {
                    try {
                        tmodel.getDataVector().removeAllElements();
                        tmodel.fireTableDataChanged();
                    } catch (NullPointerException e) {
                    }
                    stmt = con.createStatement();
                    rs = stmt.executeQuery("SELECT * FROM `Chat`");

                    while (rs.next()) {
                        String poruka = rs.getString("poruka");

                        tmodel = (DefaultTableModel) sifrovano_T.getModel();
                        tmodel.addRow(new Object[]{poruka});
                    }

                } catch (SQLException e) {
                    System.out.println("Failed " + e);
                }

                try {
                    Thread.sleep(2000);
                } catch (InterruptedException ex) {

                }

            }
        }

    }

    private boolean Connect() {

        boolean status = false;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            String serverName = "sql11.freemysqlhosting.net";
            String mydatabase = "sql11203258";
            url = "jdbc:mysql://" + serverName + ":3306/" + mydatabase;
            username = "sql11203258";
            password = "8LhtvAvxsI";
            con = DriverManager.getConnection(url, username, password);
            if (!con.isClosed()) {
                System.out.println("Uspiješno ste konektovani na CryptChat !");
                status = true;
            }
        } catch (ClassNotFoundException e) {
            System.out.println("Ne postoiji trazena klasa:" + e.getMessage());
        } catch (SQLException e) {
            System.out.println("Ne postoji korisnik:" + e.getMessage());
        }
        return status;
    }

//    private void Select(JTable jtb) {
//
//        try {
//
//            stmt = con.createStatement();
//            rs = stmt.executeQuery("SELECT * FROM `Chat`");
//
//            while (rs.next()) {
//                String poruka = rs.getString("poruka");
//
//                tmodel = (DefaultTableModel) sifrovano_T.getModel();
//                tmodel.addRow(new Object[]{poruka});
//            }
//
//        } catch (SQLException e) {
//            System.out.println("Failed " + e);
//        }
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dekriptovanje_BT = new javax.swing.JButton();
        poruka_TF = new javax.swing.JTextField();
        posalji_BT = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        sifrovano_T = new javax.swing.JTable();
        desifrovanText_L = new javax.swing.JLabel();
        kljuc_PF = new javax.swing.JPasswordField();
        desifrovanaPoruka_L = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CryptoChat");
        setResizable(false);

        dekriptovanje_BT.setText("Dekriptuj");
        dekriptovanje_BT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dekriptovanje_BTActionPerformed(evt);
            }
        });

        posalji_BT.setText("Pošalji");
        posalji_BT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                posalji_BTActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ikonice/key-tool.png"))); // NOI18N
        jLabel2.setText("Ključ:");

        sifrovano_T.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                ""
            }
        ));
        sifrovano_T.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sifrovano_TMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(sifrovano_T);

        desifrovanaPoruka_L.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(poruka_TF, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(kljuc_PF))
                                    .addComponent(desifrovanText_L, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(desifrovanaPoruka_L, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dekriptovanje_BT, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(posalji_BT, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(17, 17, 17))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(poruka_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(posalji_BT)
                    .addComponent(kljuc_PF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dekriptovanje_BT)
                    .addComponent(desifrovanText_L)
                    .addComponent(desifrovanaPoruka_L))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void posalji_BTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_posalji_BTActionPerformed

        try {

            byte[] encryptionKey = this.kljuc_PF.getText().getBytes();
            byte[] plainText = this.poruka_TF.getText().getBytes(StandardCharsets.UTF_8);
            AdvancedEncryptionStandard advancedEncryptionStandard = new AdvancedEncryptionStandard(encryptionKey);
            byte[] cipherText = advancedEncryptionStandard.encrypt(plainText);
            String encrypted = new BASE64Encoder().encodeBuffer(cipherText).replaceAll("\\s", "");
            String sifrovanaPoruka = new String(encrypted);

            String query = "INSERT INTO Chat (poruka) VALUES  ('" + sifrovanaPoruka + "')";
            stmt = con.createStatement();
            stmt.executeUpdate(query);

//            tmodel.addRow(new Object[]{sifrovanaPoruka});
            this.poruka_TF.setText("");

        } catch (Exception ex) {
            Logger.getLogger(CryptoChat.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_posalji_BTActionPerformed

    private void dekriptovanje_BTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dekriptovanje_BTActionPerformed

        try {
            byte[] encryptionKey = this.kljuc_PF.getText().getBytes();
            AdvancedEncryptionStandard advancedEncryptionStandard = new AdvancedEncryptionStandard(encryptionKey);

            try {
                byte[] valueDecoded = new BASE64Decoder().decodeBuffer(sifrovaniText);

                byte[] decryptedCipherText = advancedEncryptionStandard.decrypt(valueDecoded);
                String desifrovanText = new String(decryptedCipherText);
                this.poruka_TF.setText(desifrovanText);

            } catch (NullPointerException e) {
                byte[] valueDecoded = null;
            }

        } catch (IOException ex) {
            Logger.getLogger(CryptoChat.class.getName()).log(Level.SEVERE, null, ex);

        } catch (Exception ex) {
            Logger.getLogger(CryptoChat.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_dekriptovanje_BTActionPerformed

    private void sifrovano_TMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sifrovano_TMouseClicked
        int y = this.sifrovano_T.getSelectedRow();

        try {
            sifrovaniText = (String) this.sifrovano_T.getValueAt(y, 0);
        } catch (NullPointerException e) {
            sifrovaniText = null;
        }


    }//GEN-LAST:event_sifrovano_TMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CryptoChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CryptoChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CryptoChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CryptoChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new CryptoChat().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(CryptoChat.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton dekriptovanje_BT;
    private javax.swing.JLabel desifrovanText_L;
    private javax.swing.JLabel desifrovanaPoruka_L;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPasswordField kljuc_PF;
    private javax.swing.JTextField poruka_TF;
    private javax.swing.JButton posalji_BT;
    private javax.swing.JTable sifrovano_T;
    // End of variables declaration//GEN-END:variables
}
